// pages/onlineElection/main/main.js.js
const app = getApp();
let sorts = require('../../../utils/W.sort.js');
Page({


  /**
   * 页面的初始数据
   */
  data: {
	url:app.globalData.url,
	flow:{
		show:false,
		url:'Meeting_Flow',		// 流程地址
		list:[],	// 流程数据
		keys:[
          {name:'签到',step:1,src:'../../../static/meeting/icon01.png'},
          {name:'九严禁',step:2,src:'../../../static/meeting/icon02.png'},
          {name:'候选人批复',step:3,src:'../../../static/meeting/icon03.png'},
          {name:'候选人介绍',step:4,src:'../../../static/meeting/icon04.png'},
          {name:'选举办法',step:5,src:'../../../static/meeting/icon05.png'},
          {name:'监票人名单',step:6,src:'../../../static/meeting/icon06.png'},
          {name:'投票说明',step:7,src:'../../../static/meeting/icon07.png'},
          {name:'投票计票',step:8,src:'../../../static/meeting/icon08.png'},
          {name:'选举结果',step:9,src:'../../../static/meeting/icon09.png'},
          {name:'表态发言',step:10,src:'../../../static/meeting/icon10.png'},
        ],
	}
  },

  test(){
    console.log('测试成功很好用')
  },
  
  /** socket 连接 **/
  initSocket(){
	let socketOpen = false;
	let socketMsgQueue = [];
	wx.connectSocket({
	  url: 'ws://47.96.126.56:2234',
	  header: {
		'content-type': 'application/json'
	  },
	  // protocols: ['protocol1'],
	  success:function(res,a,d,f){
		  console.log('socket连接成功:::::',res,a,d,f);
		  wx.showToast({
		    title: 'socket连接成功~~',
		    icon: 'none',
		    duration: 1000
		  });
	  },
	  fail:function(res,a,d,f){
		  console.log('socket连接失败:::::',res,a,d,f);
		  wx.showToast({
		    title: 'socket连接失败~~',
		    icon: 'none',
		    duration: 1000
		  });
	  },
	})
		
	// 打开socket连接
	wx.onSocketOpen(function (res) {
// 	  socketOpen = true
	  console.log('socket 连接已打开:::',res);
// // 	  for (let i = 0; i < socketMsgQueue.length; i++) {
// // 		sendSocketMessage(socketMsgQueue[i])
// // 	  }
// 	  // socketMsgQueue = []
	});

	// 监听socket返回的数据
	wx.onSocketMessage(function(res,a,d,f){
		console.log('监听socket返回的数据:::::',res,a,d,f);
		wx.showToast({
		  title: '监听socket返回的数据~~',
		  icon: 'none',
		  duration: 1000
		});
	})
	wx.onSocketError(function(res) {
		console.log('onSocketError Socket连接打开失败，请检查！'+res.errMsg);
		wx.showToast({
		  title: 'onSocketError监听socket连接失败~~',
		  icon: 'none',
		  duration: 1000
		});
		//业务逻辑已隐藏
	});
	// 通过 WebSocket 连接发送数据
	wx.sendSocketMessage({data:111});
// 	function sendSocketMessage(msg) {
// 	  if (socketOpen) {
// 		wx.sendSocketMessage({
// 		  data: msg
// 		})
// 	  } else {
// 		socketMsgQueue.push(msg)
// 	  }
// 	}	
  },
  /** 显示会议流程 **/
  showFlows(){
	this.setData({
		'flow.show':!this.data.flow.show
	});
  },
  /** 获取会议流程 **/
  getFlowList(id){
	  let _this=this;
	  wx.request({
	    url: _this.data.url + _this.data.flow.url+'?meeting_id='+(id?id:''),
	    method: 'get',
	    success: (res) => {
	      if (res.data.code == 0) {
			  res.data.data.data.forEach(el=>{
				el.name = _this.data.flow.keys[el.flow_step-1].name;
				el.src = _this.data.flow.keys[el.flow_step-1].src;
			  });
	  			wx.hideLoading();
	  			this.setData({
	  				'flow.list':res.data.data.data.sort(sorts.default.compare('flow_step'))
	  			});
				// console.log('查询的会议流程222：：',this.data.flow.list,res);
	        
	      }
	    },
	    fail: (res) => {
	      console.log('fail', res);
	    }
	  });
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
	console.log('onLoad会议初始拿到的:::',options);
	this.getFlowList(options.id);
	this.initSocket();
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function (options) {
// 	console.log('onShow会议初始拿到的:::',options);
// 	this.getFlowList(options.id);
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})