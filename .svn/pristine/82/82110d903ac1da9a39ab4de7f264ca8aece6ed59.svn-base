// pages/onlineElection/main/main.js.js
const app = getApp();
let sorts = require('../../../utils/W.sort.js');
let dateformat = require('../../../utils/dateformat.js');
let WxParse = require('../../../utils/wxParse/wxParse.js');
/**
* WxParse.wxParse(bindName , type, data, target,imagePadding)
* 1.bindName绑定的数据名(必填)
* 2.type可以为html或者md(必填)
* 3.data为传入的具体数据(必填)
* 4.target为Page对象,一般为this(必填)
* 5.imagePadding为当图片自适应是左右的单一padding(默认为0,可选)
*/
Page({


  /**
   * 页面的初始数据
   */
  data: {
	  index: 0,
	  array: ['美国', '中国', '巴西', '日本'],
	url:app.globalData.url,
	wsUrl:app.globalData.wsUrl,
	meeting_id:'',
	user_id:'',
	flow:{
		showMenu:false,	// 控制显示流程的菜单
		url:'Meeting_Flow',		// 流程地址
		// list:[],	// 流程数据
		keys:[		// 流程数据
          {name:'签到',flow_step:1,src:'../../../static/meeting/icon01.png',status:1},
          {name:'九严禁',flow_step:2,src:'../../../static/meeting/icon02.png',status:1},
          {name:'候选人批复',flow_step:3,src:'../../../static/meeting/icon03.png',status:1},
          {name:'候选人介绍',flow_step:4,src:'../../../static/meeting/icon04.png',status:1},
          {name:'选举办法',flow_step:5,src:'../../../static/meeting/icon05.png',status:1},
          {name:'监票人名单',flow_step:6,src:'../../../static/meeting/icon06.png',status:1},
          {name:'投票说明',flow_step:7,src:'../../../static/meeting/icon07.png',status:1},
          {name:'投票计票',flow_step:8,src:'../../../static/meeting/icon08.png',status:1},
          {name:'选举结果',flow_step:9,src:'../../../static/meeting/icon09.png',status:1},
          {name:'表态发言',flow_step:10,src:'../../../static/meeting/icon10.png',status:1},
        ],
		curFlow:'',	// 当前进行的流程
		curFlowStatus:1,	// 当前进行的流程状态： 1流程进行时，2流程结果
		tipName:'',	// 流程区域的提示名称
		textCon:'',	// 2-7流程的富文本内容
		// 签到相关的
		sign:{
			tabs:['党员签到','群众签到'],
			activeIndex: 0,		// 当前激活的tab标签id
			sliderOffset: 0,	// 移动距离
			sliderLeft: 0,		// 移动距离
			attend:'',			// 实到人数
			required:'',		// 应到人数
			ratio:'',			// 占比
		},
		// 候选人相关的
		houxuan:{
			secretary:'',			// 书记
			deputy_secretary:'',	// 副书记
			commissioner:[],		// 委员
		},
		// 投票计票
		toupiao:{
			secretary:'',			// 书记
			deputy_secretary:'',	// 副书记
			commissioner:[],		// 委员
			party:[],				// 参会党员
		}
	}
  },

  test(){
    console.log('测试成功很好用')
  },
   bindPickerChange(e) {
    console.log('picker发送选择改变，携带值为', e.detail.value)
    this.setData({
      index: e.detail.value
    })
  },
  
  
  
  // 另选书记计票
  otherFn(data) {
    this.setData({
      otherResult: data
    })
  },


  // 投票结果展示

  scortFn(e) {
    let id = "",
      data = "";
    if (e === 'init') {
      // 初次调用
      id = '0'
    } else {
      // 点击书记副书记委员
      id = e.currentTarget.dataset.id;

    }

    switch (id) {
      case '0':
        {
          data = [
            
            {
            name: '张零零',
            process: 95,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          },
            
            {
              name: '张一一',
            process: 85,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          },
            
            {
            name: '张二二',
            process: 65,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          },
            
            {
            name: '张三三',
            process: 45,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          },
            
            {
            name: '张思思',
            process: 35,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          },
            
            {
            name: '张无无',
            process: 20,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          },
          
          ]
          break
        }
      case '1':
        {
          data = [{
            name: '张一一',
            process: 60,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          },

          ]
          break

        }
      case '2':
        {
          data = [{
            name: '张二二',
            process: 80,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          }]

          break

        }

      default:
        {
          break;
        }
    }

    this.setData({
      focursStatus: id,
      coutnResult: data
    })
  },
  
  
  // 投票计票
  focursFn(e) {
    let id = "",
      other = [],
      data = "";
    if (e === 'init') {
      id = '0'
    } else {
      id = e.currentTarget.dataset.id;

    };

    switch (id) {
      case '0':
        {
          data = [{
            name: '张零零',
            process: 95,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          }];

          other = []

          break;
        };
      case '1':
        {
          data = [{
              name: '张一一',
              process: 60,
              src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

            },

          ];

          other = [{
            name: '张思思',
            process: 70,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          }];
          break;

        };
      case '2':
        {
          data = [{
            name: '张二二',
            process: 80,
            src: 'https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=03ffa97602d79123ffe092749d355917/48540923dd54564e5b271d47bdde9c82d1584f0a.jpg'

          }];

          other =[];
          break;

        };

      default:
        {
          break;
        };
    }


    this.setData({
      focursStatus: id,
      nnounceResults: data
    })

    this.otherFn(other);
  },
  
  
  /** socket 连接 **/
  initSocket(){
	let socketOpen = false;
	let socketMsgQueue = [];
	let _this=this;
	wx.connectSocket({
	  // url: 'ws://47.96.126.56:2234',
	  url: _this.data.wsUrl,
	  header: {
		'content-type': 'application/json'
	  },
	  // protocols: ['protocol1'],
	  success:function(res,a,d,f){
		  console.log('socket连接成功:::::',res,a,d,f);
	  },
	  fail:function(res,a,d,f){
		  console.log('socket连接失败:::::',res,a,d,f);
		  wx.showToast({
		    title: 'socket连接失败~~',
		    icon: 'none',
		    duration: 1000
		  });
	  },
	})
		
	// 打开socket连接
	wx.onSocketOpen(function (res) {
// 	  socketOpen = true
	  // console.log('socket 连接已打开:::',res);
// // 	  for (let i = 0; i < socketMsgQueue.length; i++) {
// // 		sendSocketMessage(socketMsgQueue[i])
// // 	  }
// 	  // socketMsgQueue = []

	});
	
	wx.onSocketError(function(res) {
		console.log('onSocketError Socket连接打开失败，请检查！'+res.errMsg);
		wx.showToast({
		  title: 'onSocketError监听socket连接失败~~',
		  icon: 'none',
		  duration: 1000
		});
		//业务逻辑已隐藏
	});
	// 监听socket返回的数据
	wx.onSocketMessage(function(res){
		// console.log('监听socket返回的数据:::::',res);
		// 发送 会议id
		if(res&&res.data=='连接成功'){
			_this.sendMessage({meeting_id:_this.data.meeting_id,user_id:_this.data.user_id});
		}else{
			let dat = JSON.parse(res.data);
			// console.log('socket返回的会议流程数据：：',JSON.stringify(dat.data));
			// 设置会议状态
			_this.SetArrayValueChange(_this.data.flow.keys,dat.data,'status','flow_step').then(result=>{
			// console.log('socket返回的会议流程数据2：：',_this.data.flow.keys,dat,res,app);
			// _this.setData({'flow.keys':_this.data.flow.keys});
				// debugger;
				// 查看当前进行的流程
				_this.CheckCurrentFlow(_this.data.flow.keys,'status').then(cur=>{
					// console.log('socket返回的会议流程数据2：：',_this.data.flow.keys,dat,res,app,cur);
					// 记录当前是哪个流程
					_this.setData({'flow.curFlow':Number(cur.flow_step)});
					// 当前的流程为：签到
					if(Number(cur.flow_step)==1&&Number(cur.status)==2){
						if(res.data.indexOf('"user_id":'+_this.data.user_id)<0){
							// 显示签到按钮
							// _this.data.flow.curFlow = Number(cur.flow_step);
							_this.setData({
								// 'flow.curFlow':Number(cur.flow_step),
								'flow.tipName':'请进行签到',
								'flow.curFlowStatus':1,
							});
						}else{
							// 隐藏签到按钮
							// _this.data.flow.curFlow = 0;
							_this.setData({
								// 'flow.curFlow':0,
								'flow.tipName':'',
								'flow.curFlowStatus':2,
								'flow.sign.attend':Number((dat.attend||0)),	// 实到人数
								'flow.sign.required':Number((dat.required||0)),	// 应到人数
								'flow.sign.ratio':parseInt(Number((dat.attend||0))/Number((dat.required||0))*100),	// 占比
							});
						}
					}
					// 当前的流程为：3 和 5-7
					if(Number(cur.flow_step)>4&&Number(cur.flow_step)<8 || Number(cur.flow_step)==3){
						if(dat.flow_content && _this.data.flow.textCon!=dat.flow_content){
							_this.setData({
								'flow.textCon':dat.flow_content||''
							});
							_this.setTextFlowCon();
						}
					}
					// 候选人介绍
					if(Number(cur.flow_step)==4){
						_this.setData({
							'flow.tipName':'候选人介绍',
							});
						if(_this.data.flow.houxuan.commissioner.length==0 || !_this.data.flow.houxuan.deputy_secretary || !_this.data.flow.houxuan.secretary){
							let commissioner=dat.commissioner||[],
							deputy_secretary=dat.deputy_secretary||'',
							secretary=dat.secretary||'';
							secretary.age = _this.getAge(secretary.birth);
							deputy_secretary.age = _this.getAge(deputy_secretary.birth);
							if(commissioner.length>0){
								commissioner.forEach(el=>{
									el.age = _this.getAge(el.birth);
								});
							}
							_this.setData({
								'flow.houxuan.commissioner':commissioner,
								'flow.houxuan.deputy_secretary':deputy_secretary,
								'flow.houxuan.secretary':secretary,
							});
						}
					}
					// 投票
					if(Number(cur.flow_step)==8){
						if(_this.data.flow.toupiao.commissioner.length==0 || !_this.data.flow.toupiao.deputy_secretary || !_this.data.flow.toupiao.secretary || _this.data.flow.toupiao.party.length==0){
							let commissioner=dat.commissioner||[],
							deputy_secretary=dat.deputy_secretary||'',
							secretary=dat.secretary||'';
							secretary.age = _this.getAge(secretary.birth);
							deputy_secretary.age = _this.getAge(deputy_secretary.birth);
							if(commissioner.length>0){
								commissioner.forEach(el=>{
									el.age = _this.getAge(el.birth);
								});
							}
							_this.setData({
								'flow.toupiao.commissioner':commissioner,
								'flow.toupiao.deputy_secretary':deputy_secretary,
								'flow.toupiao.secretary':secretary,
							});
						}
					}
				});
			});
			
		}
	})

  },
  
  // 发送消息
  sendMessage(data){
	let datas = JSON.stringify(data);
	  // console.log('通过 WebSocket 连接发送数据::',datas);
	// 通过 WebSocket 连接发送数据
	wx.sendSocketMessage({data:datas});
  },
  /** 显示会议流程 **/
  showFlows(){
	this.setData({
		'flow.showMenu':!this.data.flow.showMenu
	});
  },
  /** 获取会议流程 **/
  getFlowList(id){
	  let _this=this;
	  wx.request({
	    url: _this.data.url + _this.data.flow.url+'?meeting_id='+(id?id:''),
	    method: 'get',
	    success: (res) => {
	      if (res.data.code == 0) {
// 			  res.data.data.data.forEach(el=>{
// 				el.name = _this.data.flow.keys[el.flow_step-1].name;
// 				el.src = _this.data.flow.keys[el.flow_step-1].src;
// 			  });
// 	  			wx.hideLoading();
// 	  			this.setData({
// 	  				'flow.list':res.data.data.data.sort(sorts.default.compare('flow_step'))
// 	  			});
				// console.log('查询的会议流程222：：',this.data.flow.list,res);
				_this.SetArrayValueChange(_this.data.flow.keys,res.data.data.data,'status','flow_step');
	        
	      }
	    },
	    fail: (res) => {
	      console.log('fail', res);
	    }
	  });
  },
  
  
  
  
  
  /** 签到 **/
  sign(e){
	console.log('签到',e,app);
	this.sendMessage({meeting_id:this.data.meeting_id,user_id:this.data.user_id,sign_time:dateformat.dateformat.format(new Date(), 'yyyy-MM-dd hh:mm')});
	// wx.closeSocket();
  },
  /** 签到结果的标签切换	**/
  tabClick: function(e) {
  	this.setData({
  		'flow.sign.sliderOffset': e.currentTarget.offsetLeft,
  		'flow.sign.activeIndex': e.currentTarget.id
  	});
  	// 党员签到
  	if (e.currentTarget.id == '0') {
  		
  	} else if (e.currentTarget.id == '1') { // 群众签到
  		
  	}
  	
  
  },
  
  /** 2-7流程 **/
  setTextFlowCon(){
	  // 设置2-7流程的富文本内容
	  let article = this.data.flow.textCon;
	  WxParse.wxParse('article', 'html', article, this, 5);
  },
  
  
  /** 设置变动的数据 **/
  SetArrayValueChange(o,n,changeKey,tarKey){
	if(!Array.isArray(o) || !Array.isArray(n)){return;}
	let res = this.ArrayValueChange(o,n,changeKey);
	let tmp = JSON.parse(JSON.stringify(this.data.flow.keys));
	for(let i=0;i<o.length;i++){
		let tmpNum = '',target='';
		for(let j=0;j<res.length;j++){
			if(res[j].changed&&o[i][tarKey]==res[j].new[tarKey]){
				tmpNum=res[j].index;
// 				target='flow.keys['+tmpNum+'].status';
// 				this.setData({target:res[j].new[changeKey]});
				// this.data.flow.keys[res[j].index].status = res[j].new[changeKey];
				tmp[tmpNum].status = res[j].new[changeKey];
			}
		}
	}
	if(Array.isArray(res)){
		this.setData({'flow.keys':tmp});
	}
	return new Promise((resolve, reject) => {
		resolve(res);
		// reject(res);
	});
  },
  /******************************** 公共方法 ↓ ********************************/
  /** 计算年龄 **/
  getAge(time){
	if(!time){return new Date().getFullYear();}
	let type = app.globalData.deviceType;
	if(type=='iphone'){
		time = time.replace(/\-/g,'/');
	}
	let now=new Date().getFullYear(),that=new Date(time).getFullYear();
	return Math.ceil(now-that);
  },
  /** 检测正在进行中的流程 **/
  CheckCurrentFlow(flow,key){
	if(!Array.isArray(flow)){return ''}
	let current='';
	for(let i=0;i<flow.length;i++){
		if(flow[i][key]==2){
			current=flow[i];
		}
	}
	return new Promise((resolve,reject)=>{
		resolve(current);
	});
	// return current;
  },
  /** 检测数据变动 **/
  ArrayValueChange(o,n,key){
	if(!Array.isArray(o) || !Array.isArray(n)){return;}
	let arr=[];
	for(let i=0;i<n.length;i++){
		if(key){
			if(n[i][key]!==o[i][key]){
				// arr.push({changed:true,detail:{key:key,index:i,old:o[i],new:n[i]}});
				arr.push({changed:true,index:i,old:o[i],new:n[i]});
			}
		}else{
			if(n[i]!==o[i]){
				arr.push({changed:true,index:i,old:o[i],new:n[i]});
			}
		}
	}
	return arr.length>0?arr:{changed:false,detail:''};
  },
  /******************************** 公共方法 ↑ ********************************/
  
  
  
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
	console.log('onLoad会议初始拿到的:::',options);
	this.setData({
		meeting_id:options.id,
		user_id:app.globalData.personInfo.id
	});
	this.getFlowList(options.id);
	this.initSocket();
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function (options) {
// 	console.log('onShow会议初始拿到的:::',options);
// 	this.getFlowList(options.id);
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})